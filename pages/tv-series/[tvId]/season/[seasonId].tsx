import Head from 'next/head';
import Image from 'next/image';
import React from 'react'
import { useRecoilState } from 'recoil';
import { searchState } from '../../../../atoms/searchAtom';
import Body from '../../../../components/Body';
import { SeasonDetails } from '../../../../interface';
import { getSeasonDetails } from '../../../api/movie';

interface ISeasonDetails {
    seasonDetails:SeasonDetails
}
const TVSeasonPage = ({ seasonDetails }:ISeasonDetails) => {
    // console.log(seasonDetails)

  return (
    <Body>
        <Head>
            <title>{seasonDetails.name}</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
        </Head>
        <div className='pl-4 pt-4 flex flex-col md:flex-row gap-2  '>
         
            <div className='flex-[0.4] '>
                <h1 className='text-lg font-bold'>{seasonDetails.name}</h1>
                <Image src={`https://image.tmdb.org/t/p/original${seasonDetails.poster_path}`} width={300}  height={350} alt={seasonDetails.name} className="w-full" objectFit="cover"  />
            </div>
            <div className='flex-[0.7] pt-2 space-y-2'>
                <div>
                    <h1 className=' text-lg font-bold'>Overview</h1>

                    <p className="text-sm md:text-base">{seasonDetails.overview}</p>
                </div>
                <div>
                    <h1 className='text-lg font-bold'>Episodes</h1>
                    <ul className='grid grid-cols-4 gap-4'>
                        {seasonDetails.episodes.map((episode)=>(
                            <li key={episode.id} className=" flex flex-col ">
                                <Image src={`https://image.tmdb.org/t/p/original${episode.still_path}`} width={100} height={100} objectFit="cover" alt={episode.name}  />
                                <span className='text-xs md:text-sm truncate'>{episode.name}</span>
                            </li>
                            
                        ))}
                    </ul>
                  
                </div>
            
            </div>
            
        </div>
        
    </Body>
  )
}

export async function getStaticPaths() {

    return {
      paths: [{ params: { seasonId: 'sth-else',tvId:"sth-else" } }],
      fallback: 'blocking',
    };
  }

export const getStaticProps = async({ params }:any) => {
    const seasonDetails = await getSeasonDetails(params.tvId,params.seasonId);
    return {
        props:{
            seasonDetails
        }
    }
}

export default TVSeasonPage