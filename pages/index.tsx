
import Head from 'next/head'
import Dashboard from '../components/Dashboard'
import { Movie } from '../interface'
import { getNowPlaying, getPopular, getTopRated, getTrendingMovies } from './api/movie'
import { useRouter } from 'next/router'
import { MouseEventHandler, useEffect, useState } from 'react'
import { useAuth } from "../context/UserContext"
import { supabase } from '../lib/supabase'
import { NextApiRequest,NextApiResponse } from "next";
import { User } from '@supabase/supabase-js'



interface IMovie {
  trendingMovies:Movie[];
  nowPlayingMovies:Movie[];
  topRatedMovies:Movie[];
  popularMovies:Movie[];
}

const Home = ({ trendingMovies,nowPlayingMovies,topRatedMovies,popularMovies }:IMovie) => {
  const router = useRouter()

  const [user, setUser] = useState<User | null>();

  // const handleLogOut: MouseEventHandler = async (e) => {
  //   e.preventDefault();

  //   const { error } = await supabase.auth.signOut();

  //   if (error) {
  //     alert(JSON.stringify(error));
  //   } else {
  //     router.push('/login');
  //   }
  // };

  useEffect(() => {
    const getProfile = () => {
      const profile = supabase.auth.user();

      if (profile) {
        setUser(profile);
      } else {
        router.push('/login');
      }
    };

    getProfile();
    console.log(user)
  }, []);

  // const [data,setData] = useState<any>(null)
 
  if (!user) {
    // Currently loading asynchronously User Supabase Information
    return null;
  }
    

  return (
    <div className='overflow-hidden'>
      <Head>
        <title>Home</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>


        {/* <Sidebar /> */}
        {/* <Navbar /> */}
        <Dashboard topRatedMovies={topRatedMovies} trendingMovies={trendingMovies} nowPlayingMovies={nowPlayingMovies} popularMovies={popularMovies} />

          
          

     
    
    </div>
  )
}

export const getServerSideProps = async(req:NextApiRequest, res:NextApiResponse) => {
  const [trendingMovies,nowPlayingMovies,topRatedMovies,popularMovies] = ([await getTrendingMovies(),await getNowPlaying(),await getTopRated(),await getPopular()]);


  
  return {
    props:{
      trendingMovies,
      nowPlayingMovies,
      topRatedMovies,
      popularMovies
    }
  }
}

export default Home
